# Demonstration of return
# The pipeline should stall while the ret passes through the decode, 
# execute, and memory stages, injecting three bubbles in the process. 
# The PC selection logic will choose the return address as 
# the instruction fetch address once the ret reaches the write-back stage
(cycle 7).
# /* $begin prog6-ys */
# prog6
   irmovq stack,%rsp  #   Initialize stack pointer
   call proc          #   Procedure call
   irmovq $10,%rdx    #   Return point
   halt
.pos 0x20
proc:                 # proc:
   ret                #   Return immediately
   rrmovq %rdx,%rbx   #   Not executed
.pos 0x30
stack:                # stack: Stack pointer
# /* $end prog6-ys */
